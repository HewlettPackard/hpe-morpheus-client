/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the SaveClusterDatastore200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SaveClusterDatastore200Response{}

// SaveClusterDatastore200Response struct for SaveClusterDatastore200Response
type SaveClusterDatastore200Response struct {
	Cluster *SaveClusterDatastore200ResponseAllOfCluster `json:"cluster,omitempty"`
	Success *bool `json:"success,omitempty"`
	ExecutionId *string `json:"executionId,omitempty"`
}

// NewSaveClusterDatastore200Response instantiates a new SaveClusterDatastore200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSaveClusterDatastore200Response() *SaveClusterDatastore200Response {
	this := SaveClusterDatastore200Response{}
	return &this
}

// NewSaveClusterDatastore200ResponseWithDefaults instantiates a new SaveClusterDatastore200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSaveClusterDatastore200ResponseWithDefaults() *SaveClusterDatastore200Response {
	this := SaveClusterDatastore200Response{}
	return &this
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *SaveClusterDatastore200Response) GetCluster() SaveClusterDatastore200ResponseAllOfCluster {
	if o == nil || IsNil(o.Cluster) {
		var ret SaveClusterDatastore200ResponseAllOfCluster
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaveClusterDatastore200Response) GetClusterOk() (*SaveClusterDatastore200ResponseAllOfCluster, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// IsSetCluster returns a boolean if a field has been set.
func (o *SaveClusterDatastore200Response) IsSetCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given SaveClusterDatastore200ResponseAllOfCluster and assigns it to the Cluster field.
func (o *SaveClusterDatastore200Response) SetCluster(v SaveClusterDatastore200ResponseAllOfCluster) {
	o.Cluster = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *SaveClusterDatastore200Response) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaveClusterDatastore200Response) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// IsSetSuccess returns a boolean if a field has been set.
func (o *SaveClusterDatastore200Response) IsSetSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *SaveClusterDatastore200Response) SetSuccess(v bool) {
	o.Success = &v
}

// GetExecutionId returns the ExecutionId field value if set, zero value otherwise.
func (o *SaveClusterDatastore200Response) GetExecutionId() string {
	if o == nil || IsNil(o.ExecutionId) {
		var ret string
		return ret
	}
	return *o.ExecutionId
}

// GetExecutionIdOk returns a tuple with the ExecutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SaveClusterDatastore200Response) GetExecutionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExecutionId) {
		return nil, false
	}
	return o.ExecutionId, true
}

// IsSetExecutionId returns a boolean if a field has been set.
func (o *SaveClusterDatastore200Response) IsSetExecutionId() bool {
	if o != nil && !IsNil(o.ExecutionId) {
		return true
	}

	return false
}

// SetExecutionId gets a reference to the given string and assigns it to the ExecutionId field.
func (o *SaveClusterDatastore200Response) SetExecutionId(v string) {
	o.ExecutionId = &v
}

func (o SaveClusterDatastore200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SaveClusterDatastore200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.ExecutionId) {
		toSerialize["executionId"] = o.ExecutionId
	}
	return toSerialize, nil
}

type NullableSaveClusterDatastore200Response struct {
	value *SaveClusterDatastore200Response
	isSet bool
}

func (v NullableSaveClusterDatastore200Response) Get() *SaveClusterDatastore200Response {
	return v.value
}

func (v *NullableSaveClusterDatastore200Response) Set(val *SaveClusterDatastore200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableSaveClusterDatastore200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableSaveClusterDatastore200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSaveClusterDatastore200Response(val *SaveClusterDatastore200Response) *NullableSaveClusterDatastore200Response {
	return &NullableSaveClusterDatastore200Response{value: val, isSet: true}
}

func (v NullableSaveClusterDatastore200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSaveClusterDatastore200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


