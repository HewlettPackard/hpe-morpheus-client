/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddInstance200ResponseAllOfOneOfInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddInstance200ResponseAllOfOneOfInstance{}

// AddInstance200ResponseAllOfOneOfInstance Key for name, site, instanceType layout, and plan.
type AddInstance200ResponseAllOfOneOfInstance struct {
	// Name of the instance to be created.
	Name string `json:"name"`
	Site AddInstanceRequestInstanceSite `json:"site"`
	InstanceType AddInstanceRequestInstanceInstanceType `json:"instanceType"`
	Layout AddInstanceRequestInstanceLayout `json:"layout"`
	Plan AddInstanceRequestInstancePlan `json:"plan"`
}

type _AddInstance200ResponseAllOfOneOfInstance AddInstance200ResponseAllOfOneOfInstance

// NewAddInstance200ResponseAllOfOneOfInstance instantiates a new AddInstance200ResponseAllOfOneOfInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddInstance200ResponseAllOfOneOfInstance(name string, site AddInstanceRequestInstanceSite, instanceType AddInstanceRequestInstanceInstanceType, layout AddInstanceRequestInstanceLayout, plan AddInstanceRequestInstancePlan) *AddInstance200ResponseAllOfOneOfInstance {
	this := AddInstance200ResponseAllOfOneOfInstance{}
	this.Name = name
	this.Site = site
	this.InstanceType = instanceType
	this.Layout = layout
	this.Plan = plan
	return &this
}

// NewAddInstance200ResponseAllOfOneOfInstanceWithDefaults instantiates a new AddInstance200ResponseAllOfOneOfInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddInstance200ResponseAllOfOneOfInstanceWithDefaults() *AddInstance200ResponseAllOfOneOfInstance {
	this := AddInstance200ResponseAllOfOneOfInstance{}
	return &this
}

// GetName returns the Name field value
func (o *AddInstance200ResponseAllOfOneOfInstance) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AddInstance200ResponseAllOfOneOfInstance) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AddInstance200ResponseAllOfOneOfInstance) SetName(v string) {
	o.Name = v
}

// GetSite returns the Site field value
func (o *AddInstance200ResponseAllOfOneOfInstance) GetSite() AddInstanceRequestInstanceSite {
	if o == nil {
		var ret AddInstanceRequestInstanceSite
		return ret
	}

	return o.Site
}

// GetSiteOk returns a tuple with the Site field value
// and a boolean to check if the value has been set.
func (o *AddInstance200ResponseAllOfOneOfInstance) GetSiteOk() (*AddInstanceRequestInstanceSite, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Site, true
}

// SetSite sets field value
func (o *AddInstance200ResponseAllOfOneOfInstance) SetSite(v AddInstanceRequestInstanceSite) {
	o.Site = v
}

// GetInstanceType returns the InstanceType field value
func (o *AddInstance200ResponseAllOfOneOfInstance) GetInstanceType() AddInstanceRequestInstanceInstanceType {
	if o == nil {
		var ret AddInstanceRequestInstanceInstanceType
		return ret
	}

	return o.InstanceType
}

// GetInstanceTypeOk returns a tuple with the InstanceType field value
// and a boolean to check if the value has been set.
func (o *AddInstance200ResponseAllOfOneOfInstance) GetInstanceTypeOk() (*AddInstanceRequestInstanceInstanceType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceType, true
}

// SetInstanceType sets field value
func (o *AddInstance200ResponseAllOfOneOfInstance) SetInstanceType(v AddInstanceRequestInstanceInstanceType) {
	o.InstanceType = v
}

// GetLayout returns the Layout field value
func (o *AddInstance200ResponseAllOfOneOfInstance) GetLayout() AddInstanceRequestInstanceLayout {
	if o == nil {
		var ret AddInstanceRequestInstanceLayout
		return ret
	}

	return o.Layout
}

// GetLayoutOk returns a tuple with the Layout field value
// and a boolean to check if the value has been set.
func (o *AddInstance200ResponseAllOfOneOfInstance) GetLayoutOk() (*AddInstanceRequestInstanceLayout, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Layout, true
}

// SetLayout sets field value
func (o *AddInstance200ResponseAllOfOneOfInstance) SetLayout(v AddInstanceRequestInstanceLayout) {
	o.Layout = v
}

// GetPlan returns the Plan field value
func (o *AddInstance200ResponseAllOfOneOfInstance) GetPlan() AddInstanceRequestInstancePlan {
	if o == nil {
		var ret AddInstanceRequestInstancePlan
		return ret
	}

	return o.Plan
}

// GetPlanOk returns a tuple with the Plan field value
// and a boolean to check if the value has been set.
func (o *AddInstance200ResponseAllOfOneOfInstance) GetPlanOk() (*AddInstanceRequestInstancePlan, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Plan, true
}

// SetPlan sets field value
func (o *AddInstance200ResponseAllOfOneOfInstance) SetPlan(v AddInstanceRequestInstancePlan) {
	o.Plan = v
}

func (o AddInstance200ResponseAllOfOneOfInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddInstance200ResponseAllOfOneOfInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["site"] = o.Site
	toSerialize["instanceType"] = o.InstanceType
	toSerialize["layout"] = o.Layout
	toSerialize["plan"] = o.Plan
	return toSerialize, nil
}

func (o *AddInstance200ResponseAllOfOneOfInstance) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"site",
		"instanceType",
		"layout",
		"plan",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddInstance200ResponseAllOfOneOfInstance := _AddInstance200ResponseAllOfOneOfInstance{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddInstance200ResponseAllOfOneOfInstance)

	if err != nil {
		return err
	}

	*o = AddInstance200ResponseAllOfOneOfInstance(varAddInstance200ResponseAllOfOneOfInstance)

	return err
}

type NullableAddInstance200ResponseAllOfOneOfInstance struct {
	value *AddInstance200ResponseAllOfOneOfInstance
	isSet bool
}

func (v NullableAddInstance200ResponseAllOfOneOfInstance) Get() *AddInstance200ResponseAllOfOneOfInstance {
	return v.value
}

func (v *NullableAddInstance200ResponseAllOfOneOfInstance) Set(val *AddInstance200ResponseAllOfOneOfInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableAddInstance200ResponseAllOfOneOfInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableAddInstance200ResponseAllOfOneOfInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddInstance200ResponseAllOfOneOfInstance(val *AddInstance200ResponseAllOfOneOfInstance) *NullableAddInstance200ResponseAllOfOneOfInstance {
	return &NullableAddInstance200ResponseAllOfOneOfInstance{value: val, isSet: true}
}

func (v NullableAddInstance200ResponseAllOfOneOfInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddInstance200ResponseAllOfOneOfInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


