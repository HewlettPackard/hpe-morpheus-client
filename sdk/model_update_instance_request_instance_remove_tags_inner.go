/*
Morpheus API

Morpheus is a powerful cloud management tool that provides provisioning, monitoring, logging, backups, and application deployment strategies.  This document describes the Morpheus API protocol and the available endpoints. Sections are organized in the same manner as they appear in the Morpheus UI.

API version: 8.0.6
Contact: dev@morpheusdata.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateInstanceRequestInstanceRemoveTagsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateInstanceRequestInstanceRemoveTagsInner{}

// UpdateInstanceRequestInstanceRemoveTagsInner struct for UpdateInstanceRequestInstanceRemoveTagsInner
type UpdateInstanceRequestInstanceRemoveTagsInner struct {
	Name *string `json:"name,omitempty"`
	Value *string `json:"value,omitempty"`
}

// NewUpdateInstanceRequestInstanceRemoveTagsInner instantiates a new UpdateInstanceRequestInstanceRemoveTagsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateInstanceRequestInstanceRemoveTagsInner() *UpdateInstanceRequestInstanceRemoveTagsInner {
	this := UpdateInstanceRequestInstanceRemoveTagsInner{}
	return &this
}

// NewUpdateInstanceRequestInstanceRemoveTagsInnerWithDefaults instantiates a new UpdateInstanceRequestInstanceRemoveTagsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateInstanceRequestInstanceRemoveTagsInnerWithDefaults() *UpdateInstanceRequestInstanceRemoveTagsInner {
	this := UpdateInstanceRequestInstanceRemoveTagsInner{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateInstanceRequestInstanceRemoveTagsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInstanceRequestInstanceRemoveTagsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// IsSetName returns a boolean if a field has been set.
func (o *UpdateInstanceRequestInstanceRemoveTagsInner) IsSetName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateInstanceRequestInstanceRemoveTagsInner) SetName(v string) {
	o.Name = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *UpdateInstanceRequestInstanceRemoveTagsInner) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInstanceRequestInstanceRemoveTagsInner) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// IsSetValue returns a boolean if a field has been set.
func (o *UpdateInstanceRequestInstanceRemoveTagsInner) IsSetValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *UpdateInstanceRequestInstanceRemoveTagsInner) SetValue(v string) {
	o.Value = &v
}

func (o UpdateInstanceRequestInstanceRemoveTagsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateInstanceRequestInstanceRemoveTagsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableUpdateInstanceRequestInstanceRemoveTagsInner struct {
	value *UpdateInstanceRequestInstanceRemoveTagsInner
	isSet bool
}

func (v NullableUpdateInstanceRequestInstanceRemoveTagsInner) Get() *UpdateInstanceRequestInstanceRemoveTagsInner {
	return v.value
}

func (v *NullableUpdateInstanceRequestInstanceRemoveTagsInner) Set(val *UpdateInstanceRequestInstanceRemoveTagsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateInstanceRequestInstanceRemoveTagsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateInstanceRequestInstanceRemoveTagsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateInstanceRequestInstanceRemoveTagsInner(val *UpdateInstanceRequestInstanceRemoveTagsInner) *NullableUpdateInstanceRequestInstanceRemoveTagsInner {
	return &NullableUpdateInstanceRequestInstanceRemoveTagsInner{value: val, isSet: true}
}

func (v NullableUpdateInstanceRequestInstanceRemoveTagsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateInstanceRequestInstanceRemoveTagsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


